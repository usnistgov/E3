# Generated by Django 3.2 on 2021-05-23 21:27

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('altID', models.IntegerField()),
                ('altName', models.CharField(max_length=30, null=True)),
                ('altBCNList', models.JSONField(default=list)),
                ('baselineBool', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='AlternativeSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysisType', models.CharField(max_length=30, null=True)),
                ('projectType', models.CharField(max_length=30)),
                ('objToReport', models.JSONField(default=list, null=True)),
                ('studyPeriod', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('baseDate', models.DateTimeField(null=True)),
                ('serviceDate', models.DateTimeField()),
                ('timestepVal', models.CharField(max_length=30, null=True, validators=[django.core.validators.MinValueValidator(models.DateTimeField(null=True))])),
                ('timestepComp', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])), django.core.validators.MinValueValidator(0)])),
                ('outputRealBool', models.BooleanField(null=True)),
                ('interestRate', models.DecimalField(decimal_places=2, max_digits=7)),
                ('dRateReal', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('dRateNom', models.DecimalField(decimal_places=2, max_digits=7)),
                ('inflationRate', models.DecimalField(decimal_places=2, max_digits=7)),
                ('Marr', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('reinvestRate', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('incomeRateFed', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('incomeRateOther', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('location', models.JSONField(default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BCN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bcnID', models.IntegerField(unique=True)),
                ('altID', models.JSONField(default=list)),
                ('bcnType', models.CharField(max_length=30)),
                ('bcnSubType', models.CharField(max_length=30, null=True)),
                ('bcnName', models.CharField(max_length=30, null=True)),
                ('bcnTag', models.JSONField(default=list, null=True)),
                ('initialOcc', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('rvBool', models.BooleanField(null=True)),
                ('bcnRealBool', models.BooleanField(null=True)),
                ('bcnInvestBool', models.BooleanField(null=True)),
                ('bcnLife', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('recurBool', models.BooleanField()),
                ('recurInterval', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('recurVarRate', models.CharField(max_length=30, null=True)),
                ('recurVarValue', models.JSONField(default=list, null=True)),
                ('recurEndDate', models.DateTimeField(auto_now_add=True, null=True, validators=[django.core.validators.MinValueValidator(models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)]))])),
                ('valuePerQ', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('quant', models.DecimalField(decimal_places=2, max_digits=7)),
                ('quantVarRate', models.CharField(max_length=30, null=True)),
                ('quantVarValue', models.JSONField(null=True)),
                ('quantUnit', models.CharField(default='dollars', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BCNStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bcnID', models.IntegerField()),
                ('bcnName', models.CharField(default='', max_length=30, null=True)),
                ('altID', models.JSONField(default=list, unique=True)),
                ('bcnType', models.CharField(max_length=30, null=True)),
                ('subType', models.CharField(max_length=30, null=True)),
                ('tag', models.CharField(default='', max_length=30)),
                ('bcnNonDiscFlow', models.JSONField(default=list)),
                ('bcnDiscFlow', models.JSONField(default=list)),
                ('quantList', models.JSONField(default=list)),
                ('quantUnt', models.CharField(default='', max_length=30)),
                ('sensBool', models.BooleanField(null=True)),
                ('sensFlowNonDisc', models.JSONField(default=list)),
                ('sensFlowDisc', models.JSONField(default=list)),
                ('sensQuantList', models.JSONField(default=list)),
                ('uncBool', models.BooleanField(null=True)),
                ('uncFlowNonDisc', models.JSONField(default=list)),
                ('uncFlowDisc', models.JSONField(default=list)),
                ('uncQuantList', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectVariables', models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sensitivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('globalVarBool', models.BooleanField(null=True)),
                ('altID', models.IntegerField(null=True, unique=True)),
                ('bcnID', models.CharField(default='', max_length=30, null=True)),
                ('varName', models.CharField(default='', max_length=30, null=True)),
                ('diffType', models.CharField(default='', max_length=30, null=True)),
                ('diffVal', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TotalOptionalFlows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TotalRequiredFlows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
    ]
