from unittest import TestCase
from datetime import datetime
import logging
from decimal import Decimal
import os
import sys
from pprint import pprint

from API.objects import Alternative, Analysis, Bcn, Sensitivity, Input, Edges
from API.tasks import analyze
from API.serializers import SensitivitySerializer
from compute.required.apps import calculate_required_flows
from base_input import BaseInput
# from django.core.exceptions import ValidationError

"""
Sensitivity tests
"""
logger = logging.getLogger(__name__)

class SensitivityTest(TestCase):
    def setUp(self):
        self.analysis = Analysis(
            analysisType="LCCA",
            projectType="Buildings",
            objToReport=["FlowSummary", "MeasureSummary", "OptionalSummary"],
            studyPeriod=40,
            baseDate=datetime.strptime('2012-04-23T18:25:43.511Z', '%Y-%m-%dT%H:%M:%S.511Z'),
            serviceDate=datetime.strptime('2013-04-23T18:25:43.511Z', '%Y-%m-%dT%H:%M:%S.511Z'),
            timestepVal="Year",
            timestepComp="EndOfYear",
            outputRealBool=True,
            interestRate=0.03,
            dRateReal=0.03,
            dRateNom=0.053690000000000015,
            inflationRate=0.022,
            Marr=0.03,
            reinvestRate=0.03,
            incomeRateFed=0.26,
            incomeRateOther=0.26,
            location=["", "", "", "", "", "", "20910", ""],
            noAlt=2,
            baseAlt=0,
        )
        self.alternative1 = Alternative(
            altID=0,
            altName="No Solar System",
            altBCNList=[0, 1, 2],
            baselineBool=True,
        )
        self.alternative2 = Alternative(
            altID=1,
            altName="Purchase Solar System",
            altBCNList=[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
            baselineBool=False,
        )
        self.bcn0 = Bcn(
            bcnID=0,
            altID=[0],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Grid Electricity Consumption",
            bcnTag="Electricity",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=[
                0,
                0.0057,
                -0.0017,
                -0.0079,
                -0.0035,
                0.0018,
                0.0018,
                0.001,
                0.0029,
                0.0004,
                -0.0024,
                -0.0041,
                0.0002,
                0.0004,
                -0.0017,
                -0.0038,
                -0.0034,
                -0.003,
                -0.0032,
                -0.0027,
                -0.0029,
                -0.003,
                -0.0063,
                -0.0032,
                -0.0024,
                -0.0044,
                -0.0022,
                -0.0024,
                -0.0055,
                -0.0069,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428
            ],
            recurEndDate=40,
            valuePerQ=0.1314,
            quant=Decimal(11000),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit="kWh",
            studyPeriod=40,
        )
        self.bcn1 = Bcn(
            bcnID=1,
            altID=[0, 1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Grid Electricity Demand Charge",
            bcnTag=None,
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=0,
            recurEndDate=40,
            valuePerQ=0,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn2 = Bcn(
            bcnID=2,
            altID=[0],
            bcnType="Non-Monetary",
            bcnSubType="Direct",
            bcnName="Grid Consumption Global Warming Potential",
            bcnTag="LCIA-Global-Warming-Potential",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=[
                0,
                0.0057,
                -0.0017,
                -0.0079,
                -0.0035,
                0.0018,
                0.0018,
                0.001,
                0.0029,
                0.0004,
                -0.0024,
                -0.0041,
                0.0002,
                0.0004,
                -0.0017,
                -0.0038,
                -0.0034,
                -0.003,
                -0.0032,
                -0.0027,
                -0.0029,
                -0.003,
                -0.0063,
                -0.0032,
                -0.0024,
                -0.0044,
                -0.0022,
                -0.0024,
                -0.0055,
                -0.0069,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428
            ],
            recurEndDate=40,
            valuePerQ=1,
            quant=Decimal(6662.510592526438),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit="kg",
            studyPeriod=40,
        )
        self.bcn3 = Bcn(
            bcnID=3,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="PV Grid Connection Fee",
            bcnTag=None,
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=0,
            recurEndDate=40,
            valuePerQ=0,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn4 = Bcn(
            bcnID=4,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Total Installation Costs Residual Value",
            bcnTag="Resale Value",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=True,
            rvBool=True,
            rvOnly=True,
            bcnLife=20,
            recurBool=True,
            recurInterval=20,
            recurVarRate=None,
            recurVarValue=0,
            recurEndDate=50,
            valuePerQ=30000,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn5 = Bcn(
            bcnID=5,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Federal Tax Credit",
            bcnTag="Upfront Financial Incentives",
            initialOcc=0,
            bcnRealBool=True,
            bcnInvestBool=True,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=False,
            recurInterval=None,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=None,
            valuePerQ=-9000,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn6 = Bcn(
            bcnID=6,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Grants Rebates",
            bcnTag="Upfront Financial Incentives",
            initialOcc=0,
            bcnRealBool=True,
            bcnInvestBool=True,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=False,
            recurInterval=None,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=None,
            valuePerQ=-1000,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn7 = Bcn(
            bcnID=7,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Maintenance Costs",
            bcnTag="Maintenance Costs",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=0,
            recurEndDate=40,
            valuePerQ=0,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn8 = Bcn(
            bcnID=8,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Panel replacement",
            bcnTag="System Replacement Costs",
            initialOcc=21,
            bcnRealBool=True,
            bcnInvestBool=True,
            rvBool=False,
            rvOnly=False,
            bcnLife=20,
            recurBool=True,
            recurInterval=20,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=None,
            valuePerQ=30000,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn9 = Bcn(
            bcnID=9,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Net Grid Electricity Consumption",
            bcnTag="Electricity",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=[
                0,
                0.0057,
                -0.0017,
                -0.0079,
                -0.0035,
                0.0018,
                0.0018,
                0.001,
                0.0029,
                0.0004,
                -0.0024,
                -0.0041,
                0.0002,
                0.0004,
                -0.0017,
                -0.0038,
                -0.0034,
                -0.003,
                -0.0032,
                -0.0027,
                -0.0029,
                -0.003,
                -0.0063,
                -0.0032,
                -0.0024,
                -0.0044,
                -0.0022,
                -0.0024,
                -0.0055,
                -0.0069,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428
            ],
            recurEndDate=40,
            valuePerQ=0.1314,
            quant=Decimal(11000),
            quantVarRate="Percent Delta Timestep X-1",
            quantVarValue=[
                -1,
                -0.995,
                1,
                0.5,
                0.3333333333333333,
                0.25,
                0.2,
                0.16666666666666666,
                0.14285714285714285,
                0.125,
                0.1111111111111111,
                0.1,
                0.09090909090909091,
                0.08333333333333333,
                0.07692307692307693,
                0.07142857142857142,
                0.06666666666666667,
                0.0625,
                0.058823529411764705,
                0.05555555555555555,
                0.05263157894736842,
                -1,
                -0.995,
                1,
                0.5,
                0.3333333333333333,
                0.25,
                0.2,
                0.16666666666666666,
                0.14285714285714285,
                0.125,
                0.1111111111111111,
                0.1,
                0.09090909090909091,
                0.08333333333333333,
                0.07692307692307693,
                0.07142857142857142,
                0.06666666666666667,
                0.0625,
                0.058823529411764705,
                0.05555555555555555
            ],
            quantUnit="kWh",
            studyPeriod=40,
        )
        self.bcn10 = Bcn(
            bcnID=10,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Net Panel Electricity Production",
            bcnTag="Electricity",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=[
                0,
                0.0057,
                -0.0017,
                -0.0079,
                -0.0035,
                0.0018,
                0.0018,
                0.001,
                0.0029,
                0.0004,
                -0.0024,
                -0.0041,
                0.0002,
                0.0004,
                -0.0017,
                -0.0038,
                -0.0034,
                -0.003,
                -0.0032,
                -0.0027,
                -0.0029,
                -0.003,
                -0.0063,
                -0.0032,
                -0.0024,
                -0.0044,
                -0.0022,
                -0.0024,
                -0.0055,
                -0.0069,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428
            ],
            recurEndDate=40,
            valuePerQ=0.1314,
            quant=Decimal(-11000),
            quantVarRate="Percent Delta Timestep X-1",
            quantVarValue=[
                -1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            quantUnit="kWh",
            studyPeriod=40,
        )
        self.bcn11 = Bcn(
            bcnID=11,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Total Installation Costs",
            bcnTag="Installation Costs",
            initialOcc=0,
            bcnRealBool=True,
            bcnInvestBool=True,
            rvBool=False,
            rvOnly=False,
            bcnLife=20,
            recurBool=False,
            recurInterval=None,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=None,
            valuePerQ=30000,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn12 = Bcn(
            bcnID=12,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Up Front Solar Renewable Energy Credits",
            bcnTag="SREC",
            initialOcc=0,
            bcnRealBool=True,
            bcnInvestBool=True,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=False,
            recurInterval=None,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=None,
            valuePerQ=-1000,
            quant=Decimal(10),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn13 = Bcn(
            bcnID=13,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Inverter Replacement Costs 0",
            bcnTag="Inverter Replacement Costs",
            initialOcc=9,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=8,
            recurBool=True,
            recurInterval=8,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=21,
            valuePerQ=-1800,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn14 = Bcn(
            bcnID=14,
            altID=[1],
            bcnType="Cost",
            bcnSubType="Direct",
            bcnName="Inverter Replacement Costs 1",
            bcnTag="Inverter Replacement Costs",
            initialOcc=21,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=True,
            rvOnly=False,
            bcnLife=8,
            recurBool=True,
            recurInterval=8,
            recurVarRate=None,
            recurVarValue=None,
            recurEndDate=41,
            valuePerQ=-1800,
            quant=Decimal(1),
            quantVarRate=None,
            quantVarValue=None,
            quantUnit=None,
            studyPeriod=40,
        )
        self.bcn15 = Bcn(
            bcnID=15,
            altID=[1],
            bcnType="Non-Monetary",
            bcnSubType="Direct",
            bcnName="Consumption Global Warming Potential",
            bcnTag="LCIA-Global-Warming-Potential",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=True,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=[
                0,
                0.0057,
                -0.0017,
                -0.0079,
                -0.0035,
                0.0018,
                0.0018,
                0.001,
                0.0029,
                0.0004,
                -0.0024,
                -0.0041,
                0.0002,
                0.0004,
                -0.0017,
                -0.0038,
                -0.0034,
                -0.003,
                -0.0032,
                -0.0027,
                -0.0029,
                -0.003,
                -0.0063,
                -0.0032,
                -0.0024,
                -0.0044,
                -0.0022,
                -0.0024,
                -0.0055,
                -0.0069,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428
            ],
            recurEndDate=40,
            valuePerQ=0.1314,
            quant=Decimal(11000),
            quantVarRate="Percent Delta Timestep X-1",
            quantVarValue=[
                -1,
                -0.9969715860943061,
                1,
                0.4999999999999999,
                0.3333333333333334,
                0.25000000000000006,
                0.19999999999999987,
                0.1666666666666667,
                0.1428571428571429,
                0.12500000000000003,
                0.11111111111111113,
                0.09999999999999985,
                0.09090909090909094,
                0.08333333333333336,
                0.07692307692307694,
                0.07142857142857145,
                0.06666666666666668,
                0.06249999999999991,
                0.05882352941176482,
                0.05555555555555547,
                0.05263157894736852,
                -1,
                -0.9969715860943061,
                1,
                0.4999999999999999,
                0.3333333333333334,
                0.25000000000000006,
                0.19999999999999987,
                0.1666666666666667,
                0.1428571428571429,
                0.12500000000000003,
                0.11111111111111113,
                0.09999999999999985,
                0.09090909090909094,
                0.08333333333333336,
                0.07692307692307694,
                0.07142857142857145,
                0.06666666666666668,
                0.06249999999999991,
                0.05882352941176482,
                0.05555555555555547
            ],
            quantUnit="kg",
            studyPeriod=40,
        )
        self.bcn16 = Bcn(
            bcnID=16,
            altID=[1],
            bcnType="Non-Monetary",
            bcnSubType="Direct",
            bcnName="Production Global Warming Potential",
            bcnTag="LCIA-Global-Warming-Potential",
            initialOcc=1,
            bcnRealBool=True,
            bcnInvestBool=False,
            rvBool=False,
            rvOnly=False,
            bcnLife=None,
            recurBool=True,
            recurInterval=1,
            recurVarRate="Percent Delta Timestep X-1",
            recurVarValue=[
                0,
                0.0057,
                -0.0017,
                -0.0079,
                -0.0035,
                0.0018,
                0.0018,
                0.001,
                0.0029,
                0.0004,
                -0.0024,
                -0.0041,
                0.0002,
                0.0004,
                -0.0017,
                -0.0038,
                -0.0034,
                -0.003,
                -0.0032,
                -0.0027,
                -0.0029,
                -0.003,
                -0.0063,
                -0.0032,
                -0.0024,
                -0.0044,
                -0.0022,
                -0.0024,
                -0.0055,
                -0.0069,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428,
                0.00428
            ],
            recurEndDate=40,
            valuePerQ=0.1314,
            quant=Decimal(-11000),
            quantVarRate="Percent Delta Timestep X-1",
            quantVarValue=[
                -1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            quantUnit="kg",
            studyPeriod=40,
        )

        logger.info("Success!: %s", "Setup tests passed.")

        return

    def test_output_accuracy(self):
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'e3_django.settings')
        try:
            from django.core.management import execute_from_command_line
        except ImportError as exc:
            raise ImportError(
                "Couldn't import Django. Are you sure it's installed and "
                "available on your PYTHONPATH environment variable? Did you "
                "forget to activate a virtual environment?"
            ) from exc
        execute_from_command_line(sys.argv)

        self.sensitivityObjects = []
        self.analysisObject = self.analysis
        self.bcnObjects = [self.bcn0, self.bcn1, self.bcn2, self.bcn3, self.bcn4, self.bcn5, self.bcn6, self.bcn7,
                           self.bcn8, self.bcn9, self.bcn10, self.bcn11, self.bcn12, self.bcn13, self.bcn14,
                           self.bcn15, self.bcn16]
        self.alternativeObjects = [self.alternative1, self.alternative2]
        self.edgesObject = None

        analysisData = vars(self.analysisObject)

        bcnData = []
        for i in range(len(self.bcnObjects)):
            bcnData.append(vars(self.bcnObjects[i]))

        alternativeData = []
        for i in range(len(self.alternativeObjects)):
            alternativeData.append(vars(self.alternativeObjects[i]))

        if self.sensitivityObjects:
            sensitivityData = []
            for i in range(len(self.sensitivityObjects)):
                sensitivityData.append(vars(self.sensitivityObjects[i]))
        else:
            sensitivityData = None

        if self.edgesObject:
            edgesData = vars(self.edgesObject)
        else:
            edgesData = None

        inputData = {"analysisObject": analysisData,
                     "bcnObjects": bcnData,
                     "alternativeObjects": alternativeData,
                     "sensitivityObjects": sensitivityData,
                     "edgesObject": edgesData}

        self.input = Input(
            sensitivityObjects=self.sensitivityObjects,
            analysisObject=self.analysisObject,
            bcnObjects=self.bcnObjects,
            alternativeObjects=self.alternativeObjects,
            edgesObject=self.edgesObject,
            scenarioObject=None
        )

        results = analyze(self.input)
